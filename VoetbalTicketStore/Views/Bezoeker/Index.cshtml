@model VoetbalTicketStore.ViewModel.BezoekerKoppelen

@{
    ViewBag.Title = "Bezoekers koppelen";
}

@if (ViewBag.msg != null)
{
    <div class="alert alert-success">
        @ViewBag.msg
    </div>
}
<div class="page-header">
    <h1>Tickets <small>Koppel een bezoeker</small></h1>
</div>
@if (Model.NietGekoppeldeTickets.Count() == 0)
{
    <div class="alert alert-info" role="alert">
        Je hebt nog geen tickets gekocht. Van zodra je tickets bestelt kan je er hier een bezoeker aan koppelen via zijn of haar rijksregisternummer.
        <hr />
        <h4 class="alert-heading">Let op!</h4>Deze koppeling is <strong>verplicht</strong>. Een ticket zonder gekoppelde bezoeker is ongeldig in het stadion!
    </div>
}

@foreach (IGrouping<VoetbalTicketStore.Models.Bestelling, VoetbalTicketStore.Models.Ticket> item in Model.NietGekoppeldeTickets)
{
    <div class="row">
        <h2>
            Bestelling @Html.DisplayFor(t => item.Key.Id)
        </h2>
        @foreach (VoetbalTicketStore.Models.Ticket ticket in item.ToArray())
        {
            <div class="col-md-3">
                @using (Html.BeginForm("Koppel", "Bezoeker", FormMethod.Get))
                {
                    <h4>
                        Ticket #@Html.DisplayFor(t => ticket.Id) (@Html.DisplayFor(t => ticket.Prijs))
                    </h4>
                    <ul class="list-group">
                        <li class="list-group-item">
                            @Html.DisplayFor(t => ticket.Wedstrijd.Club.Naam)
                            vs @Html.DisplayFor(t => ticket.Wedstrijd.Club1.Naam)
                        </li>
                        <li class="list-group-item">
                            @Html.DisplayFor(t => ticket.Vak.VakType.Beschrijving)
                        </li>
                        <li class="list-group-item">
                            @Html.DisplayFor(t => ticket.Wedstrijd.DatumEnTijd)
                        </li>
                        <li class="list-group-item">
                            <button type="submit" class="btn btn-primary">
                                <span class="glyphicon glyphicon-user"></span> Koppel bezoeker
                            </button>
                        </li>
                    </ul>
                    @Html.Hidden("TeWijzigenTicket", ticket.Id)
                }
            </div>


        }
    </div>
}
<hr />
<h1>Abonnementen <small>Koppel een bezoeker</small></h1>
<hr />
@if (Model.NietGekoppeldeAbonnementen.Count() == 0)
{
    <div class="alert alert-info" role="alert">
        Je hebt nog geen abonnementen gekocht. Van zodra een abonnement bestelt kan je er hier een bezoeker aan koppelen via zijn of haar rijksregisternummer.
        <hr />
        <h4 class="alert-heading">Let op!</h4>Deze koppeling is <strong>verplicht</strong>. Een abonnement zonder gekoppelde bezoeker is ongeldig in het stadion!
    </div>
}
<div class="row">
    @foreach (VoetbalTicketStore.Models.Abonnement abonnement in Model.NietGekoppeldeAbonnementen)
    {
    <div class="col-md-3">
        @using (Html.BeginForm("Koppel", "Bezoeker", FormMethod.Get))
        {
            <h4>Abonnement #@Html.DisplayFor(t => abonnement.Id) (@Html.DisplayFor(t => abonnement.Prijs))</h4>
            <ul class="list-group">
                <li class="list-group-item">
                    @Html.DisplayFor(t => abonnement.Club.Naam)
                </li>
                <li class="list-group-item">
                    @Html.DisplayFor(t => abonnement.Club.Stadion.Naam)
                </li>
                <li class="list-group-item">
                    @Html.DisplayFor(t => abonnement.Vak.VakType.Beschrijving)
                </li>
                <li class="list-group-item">
                    <button type="submit" class="btn btn-primary">
                        <span class="glyphicon glyphicon-user"></span> Koppel bezoeker
                    </button>
                </li>
            </ul>
            @Html.Hidden("TeWijzigenAbonnement", abonnement.Id)
        }
    </div>
    }
</div>


