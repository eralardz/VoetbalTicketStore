@model VoetbalTicketStore.ViewModel.BestellingVM

@{
    ViewBag.Title = "Aankoopgeschiedenis";
}

@if (ViewBag.msg != null)
{
    <div class="alert alert-success">
        @ViewBag.msg
    </div>
}

<div class="row">
    <div class="page-header">
        <h1>Uw aankoopgeschiedenis <small>Tickets en abonnementen</small></h1>
    </div>
</div>
@if (Model.Bestellingen == null || Model.Bestellingen.Count() == 0)
{
    <div class="alert alert-info" role="alert">
        Je hebt nog geen bestellingen geplaatst. Van zodra je tickets of een abonnement bestelt, kunnen deze hier bekeken worden.
    </div>
}
@foreach (VoetbalTicketStore.Models.Bestelling bestelling in @Model.Bestellingen)
{
    //enkel bestellingen met inhoud
    if (bestelling.Tickets.Count > 0 || bestelling.Abonnements.Count > 0)
    {
        <div class="row">
            <h3>Bestelling: #@Html.DisplayFor(modelItem => bestelling.Id) (@Html.DisplayFor(modelItem => bestelling.BestelDatum) - @Html.DisplayFor(modelItem => bestelling.TotaalPrijs))</h3>
            <div class="row">
                @foreach (VoetbalTicketStore.Models.Ticket ticket in bestelling.Tickets)
                {
                    <div class="col-md-3">
                        <ul class="list-group">
                            <li class="list-group-item"><strong>Ticket </strong>#@Html.DisplayFor(modelItem => ticket.Id)</li>
                            <li class="list-group-item">@Html.DisplayFor(modelItem => ticket.Wedstrijd.Club.Naam) - @Html.DisplayFor(modelItem => ticket.Wedstrijd.Club1.Naam)</li>
                            <li class="list-group-item">@Html.DisplayFor(modelItem => ticket.Wedstrijd.Stadion.Naam)</li>
                            <li class="list-group-item">@Html.DisplayFor(modelItem => ticket.Wedstrijd.DatumEnTijd)</li>
                            <li class="list-group-item">@Html.DisplayFor(modelItem => ticket.Prijs)</li>


                            <li class="list-group-item">

                                @if (ticket.Bezoekerrijksregisternummer == null)
                                {
                                    <text>Nog geen bezoeker gekoppeld</text>
                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => ticket.Bezoekerrijksregisternummer)
                                }
                            </li>
                            <li class="list-group-item">

                                @if (ticket.Bezoekerrijksregisternummer == null)
                                {
                                    <text>Voucher nog niet beschikbaar</text>
                                }
                                else
                                {
                                    //Don't mix with other components Icon classes cannot be directly combined with other components. -> ActionLink niet geschikt, Action kan niet POSTen, dus een Form dan maar
                                    using (Html.BeginForm("GenerateTicketPDF", "Bezoeker", new VoetbalTicketStore.ViewModel.BestellingVM { TicketId = ticket.Id, BestellingId = bestelling.Id, Prijs = ticket.Prijs, ThuisploegNaam = ticket.Wedstrijd.Club.Naam, TegenstandersNaam = ticket.Wedstrijd.Club1.Naam, BezoekerNaam = ticket.Bezoeker.Naam, BezoekerVoornaam = ticket.Bezoeker.Voornaam, BezoekerRijksregisternummer = ticket.Bezoekerrijksregisternummer, BezoekerEmail = ticket.Bezoeker.Email, StadionAdres = ticket.Wedstrijd.Stadion.Adres, StadionNaam = ticket.Wedstrijd.Stadion.Naam, WedstrijdDatumEnTijd = ticket.Wedstrijd.DatumEnTijd }, FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()

                                        <button type="submit" class="btn btn-primary" role="menuitem">
                                            <i class="glyphicon glyphicon-download-alt"></i>Voucher
                                        </button>
                                    }
                                }
                            </li>
                            @if ((ticket.Wedstrijd.DatumEnTijd - DateTime.Now).TotalDays > 7)
                            {
                                <li class="list-group-item">
                                    @using (Html.BeginForm("Annuleren", "Bestelling", new VoetbalTicketStore.ViewModel.BestellingVM { BestellingId = ticket.BestellingId, TicketId = ticket.Id }, FormMethod.Post, htmlAttributes: new { @class = "ilform" }))
                                    {
                                        @Html.AntiForgeryToken()

                                        <button type="submit" class="btn btn-danger btn-sm" role="menuitem" data-toggle="tooltip" title="(nog @Math.Floor(Math.Abs((7 - (ticket.Wedstrijd.DatumEnTijd - DateTime.Now).TotalDays))) dagen)">
                                            <i class="glyphicon glyphicon-remove"></i>Annuleren
                                        </button>
                                    }




                                </li>
                            }
                        </ul>
                    </div>

                }
                @foreach (VoetbalTicketStore.Models.Abonnement abonnement in bestelling.Abonnements)
                {
                    <div class="col-md-3">
                        <ul class="list-group">
                            <li class="list-group-item"><strong>Abonnement</strong> #@Html.DisplayFor(modelItem => abonnement.Id)</li>
                            <li class="list-group-item">@Html.DisplayFor(modelItem => abonnement.Club.Naam)</li>
                            <li class="list-group-item">@Html.DisplayFor(modelItem => abonnement.Club.Stadion.Naam)</li>
                            <li class="list-group-item">@Html.DisplayFor(modelItem => abonnement.Prijs)</li>
                            <li class="list-group-item">
                                @if (abonnement.Bezoekerrijksregisternummer == null)
                                {
                                    <text>Nog geen bezoeker gekoppeld</text>
                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => abonnement.Bezoekerrijksregisternummer)
                                }
                            </li>
                            <li class="list-group-item">

                                @if (abonnement.Bezoekerrijksregisternummer == null)
                                {
                                    <text>Abonnement nog niet beschikbaar</text>
                                }
                                else
                                {
                                    //Don't mix with other components Icon classes cannot be directly combined with other components. -> ActionLink niet geschikt, Action kan niet POSTen, dus een Form dan maar
                                    using (Html.BeginForm("GenerateAbonnementPDF", "Bezoeker", new VoetbalTicketStore.ViewModel.BestellingVM { AbonnementId = abonnement.Id, BestellingId = abonnement.BestellingId, Prijs = abonnement.Prijs, ThuisploegNaam = abonnement.Club.Naam, StadionNaam = abonnement.Club.Stadion.Naam, BestelDatum = abonnement.Bestelling.BestelDatum, BezoekerVoornaam = abonnement.Bezoeker.Voornaam, BezoekerNaam = abonnement.Bezoeker.Naam, BezoekerRijksregisternummer = abonnement.Bezoekerrijksregisternummer, BezoekerEmail = abonnement.Bezoeker.Email }, FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()

                                        <button type="submit" class="btn btn-primary" role="menuitem">
                                            <i class="glyphicon glyphicon-download-alt"></i>Voucher
                                        </button>
                                    }
                                }
                            </li>
                        </ul>
                    </div>
                }
            </div>
        </div>
    }
}


